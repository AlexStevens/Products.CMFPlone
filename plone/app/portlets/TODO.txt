========================
plone.app.portlets to-do
========================

  Tests
  
    - Existing tests do not work - they need to be updated for the latest
      refactoring. This will be fixed ASAP. :)
  
    Also test:
  
    - login portlet
    - add views
    - namespace traversal adapters

  Infrastructure
  
    o Category mappings are created on-the-fly in the namespace traversal
      adapters, which many not be ideal (even though these are protected by
      ManagePortal)
      
        - create when users and groups are added?
  
    o Portlets like the login portlet have no configuration: formlib then
        displays a blank page :-(
        - can we short-circuit these?
  
  Portlets

    o Make standard set of portlets
        - Smart Folder renderer
        - Document renderer
        - News
        - Events
        - Recent
        - Related
        - Calendar
        
    o Make a base class for add forms based on formlib's AddForm
        - Register these as part of portlet configuration (mostly done)
        - Also register edit form, using e.g. 'edit' as name convention
        - Look for all such add forms to get list of addable portlets

  User Interface

    o Add dashboard page using portlets.dashboard
        - May need to split dashboard into several columns
        
    o Need UI for assigning user-, group- and content-type-portlets.
        - This should be very similar to how contextual portlets work.
        
    o There is no UI yet for blacklisting (stop-acquistion) of context, user,
      group or content-type portlets

  Plone Integration

    o Remove/deprecate portlets_fetcher
    
        - The need for a provider: expression will break existing customisations
          of main_template. May be better to put this expression in 
          portlet_fetcher.pt for now.
          
        - Consider what to do with 'sr', 'sl', 'hide_columns' and 
           'slots_mapping' in global_defines. Is anyone depending on these?
           
        - Need a way to signal that columns should be hidden
            - e.g. a property 'available' in the renderer?
  
    o Add a generic migration from left_slots/right_slots
        - Should be "on-demand" (perhaps automatic for site root)
        - See code in testing.py
        - Could also have a custom IPortletManagerRenderer that builds
            ClassicPortlet's on-the-fly
        
    o Add migration steps to Plone's migration machinery
    
    o Set up default portlets during site set-up

  GenericSetup import/export handlers

    o Better test coverage for portlet manager GenericSetup import/export
        - export
        - re-import with purge
        - re-import without purge
      
    o Extend import/export handler to cover portlet assignments?
